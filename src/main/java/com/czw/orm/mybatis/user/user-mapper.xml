<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.User">
	
	<!-- 表字段和类属性映射，返回map -->
	<resultMap type="com.czw.orm.mybatis.domain.User" id="user">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="age" property="age" />
		<result column="regTime" property="regTime" />
		<result column="password" property="password" />
	</resultMap>
	
	
	<cache
		eviction="LRU"
		flushInterval="10000"
		size="512"
		readOnly="true"/> 
	<!-- 	
		自定义缓存
		<cache type="com.czw.cache.ehcache.xx"/>
		
		也许将来会用到相同的自定义缓存实现，通过这种方式引用
		<cache-ref namespace="com.someone.application.data.SomeMapper"/>	
	-->
	
	<!-- 
		参数类型的设置：#{property,javaType=int,jdbcType=NUMERIC}
		
	 -->
	
	<select id="getUser" parameterType="int" resultMap="user" flushCache="false" useCache="true">
		select * from user where id=#{id}
	</select>
	
	<insert id="insert" flushCache="true">
		<!-- <selectKey keyProperty="id" resultType="int" order="BEFORE">
			返回多行最近插入的id
			SELECT LAST_INSERT_ID() from user
			select @@IDENTITY+1 as id
		</selectKey> -->
		insert user (name, age, regTime,password)
		values (#{name}, #{age}, #{regTime},#{password})
	</insert>
	
	<update id="updatePassword" flushCache="true">
		update user set password = #{password} where id = #{id}
	</update>
	
	<delete id="delete" flushCache="true">
		delete from user where id = #{id}
	</delete>



</mapper>